{
    // possible values: en-US, zh-CN
    "locale": "en-US",

    // The startup command for this language server
    "command": [
        "${storage_path}/LSP-robloxluau/bin/${binplatform}/lua-language-server",
        "-E",
        "-e",
        "LANG=\"${locale}\"",
        "${storage_path}/LSP-robloxluau/main.lua"
    ],

    // The server version to download in $CACHE/Package Storage
    "server_version": "1.3.1",

    // Disable the trigger characters, because there's too many of them. The
    // default Lua syntax is capable enough to best decide when to trigger
    // the auto-complete widget.
    "disabled_capabilities": {
        "completionProvider": {
            "triggerCharacters": true
        }
    },

    // We start this server when opening a lua file
    "selector": "source.lua",

    // The server-specific settings
    "settings": {
        // Color mode.
        // possible values: Grammar, Semantic
        "robloxLsp.color.mode": "Grammar",
        // Autocompletes function parentheses like in Roblox Studio.
        "robloxLsp.completion.callParenthesess": false,
        // Previewing the relevant code snippet of the suggestion may help you understand the usage
        // of the suggestion. The number set indicates the number of intercepted lines in the code
        // fragment. If it is set to `0`, this feature can be disabled.
        "robloxLsp.completion.displayContext": 0,
        // Enable completion.
        "robloxLsp.completion.enable": true,
        // Shows keyword syntax snippets.
        // possible values: Disable, Both, Replace
        "robloxLsp.completion.keywordSnippet": "Replace",
        // Display parameters in completion list. When the function has multiple definitions, they
        // will be displayed separately.
        "robloxLsp.completion.showParams": true,
        // Enable on type `end` autocompletion like in Roblox Studio.
        "robloxLsp.completion.endAutocompletion": false,
        // Shows words within the workspace.
        "robloxLsp.completion.workspaceWord": true,
        // Shows deprecated members (Except duplicates).
        "robloxLsp.completion.deprecatedMembers": false,
        // Disabled diagnostic (Use code in hover brackets).
        "robloxLsp.diagnostics.disable": [],
        // Enable diagnostics.
        "robloxLsp.diagnostics.enable": true,
        // Defined global variables.
        "robloxLsp.diagnostics.globals": [],
        // If you want to check only opened files, choice Opened; else choice Any.
        "robloxLsp.diagnostics.neededFileStatus": {},
        // Modified diagnostic severity.
        "robloxLsp.diagnostics.severity": {},
        // Latency (milliseconds) for workspace diagnostics. When you start the workspace, or edit
        // any file, the entire workspace will be re-diagnosed in the background. Set to negative to
        // disable workspace diagnostics.
        "robloxLsp.diagnostics.workspaceDelay": 0,
        // Workspace diagnostics run rate (%). Decreasing this value reduces CPU usage, but also
        // reduces the speed of workspace diagnostics. The diagnosis of the file you are currently
        // editing is always done at full speed and is not affected by this setting.
        "robloxLsp.diagnostics.workspaceRate": 100,
        // Enable hint.
        "robloxLsp.hint.enable": false,
        // Hint parameter name when the parameter called is literal.
        "robloxLsp.hint.paramName": false,
        // Show type hints at the parameter of the function.
        "robloxLsp.hint.paramType": true,
        // Hint type at assignment operation.
        "robloxLsp.hint.setType": false,
        // Hint types at variables definitions.
        "robloxLsp.hint.variableType": true,
        // Hint return types at functions.
        "robloxLsp.hint.returnType": false,
        // Enable hover.
        "robloxLsp.hover.enable": true,
        // When the value corresponds to multiple types, limit the number of types displaying.
        "robloxLsp.hover.enumsLimit": 5,
        // When hovering to view a table, limits the maximum number of previews for fields.
        "robloxLsp.hover.previewFields": 20,
        // Hover to view numeric content (only if literal is not decimal).
        "robloxLsp.hover.viewNumber": true,
        // Hover to view the contents of a string (only if the literal contains an escape
        // character).
        "robloxLsp.hover.viewString": true,
        // The maximum length of a hover to view the contents of a string.
        "robloxLsp.hover.viewStringMax": 1000,
        // File encoding. The `ansi` option is only available under the `Windows` platform.
        // possible values: utf8, ansi
        "robloxLsp.runtime.fileEncoding": "utf8",
        // `package.path`
        "robloxLsp.runtime.path": [
            "?.lua", 
            "?/init.lua", 
            "?/?.lua"
        ],
        // Plugin path. Please read [wiki](https://github.com/sumneko/lua-language-
        // server/wiki/Plugin) to learn more.
        "robloxLsp.runtime.plugin": "",
        // Enable signature help.
        "robloxLsp.signatureHelp.enable": true,
        // Shows item documentation in signature help.
        "robloxLsp.signatureHelp.documentation": true,
        // Show progress bar in status bar.
        "robloxLsp.window.progressBar": true,
        // Show extension status in status bar.
        "robloxLsp.window.statusBar": true,
        // Ignored files and directories (Use `.gitignore` grammar).
        "robloxLsp.workspace.ignoreDir": [
            ".vscode"
        ],
        // Ignore submodules.
        "robloxLsp.workspace.ignoreSubmodules": true,
        // The directory path of the external function library.
        // The language service will additionally load the lua files in these directories, even if
        // they are not in the current workspace, for definition, completion and other features.
        "robloxLsp.workspace.library": [],
        // Max preloaded files.
        "robloxLsp.workspace.maxPreload": 1000,
        // Skip files larger than this value (KB) when preloading.
        "robloxLsp.workspace.preloadFileSize": 100,
        // Ignore files list in `.gitignore` .
        "robloxLsp.workspace.useGitIgnore": true,
        // The name of the .project.json file without the extension.
        "robloxLsp.workspace.rojoProjectFile": "default",
        // possible values: All Files, Rojo Project
        // What files should be preloaded.
        "robloxLsp.workspace.loadMode": "All Files",
        // Suggests Roblox Services that can be auto imported.
        "robloxLsp.misc.serviceAutoImport": true,
        // Enable Color Picker and Preview for Color3 functions.
        "robloxLsp.misc.color3Picker": true,
        // If enabled, shows a link to the source script when requiring a module.
        "robloxLsp.misc.goToScriptLink": true,
        // Command line parameters when starting the language service in VSCode.
        "robloxLsp.misc.parameters": "",
        // possible values: Disabled, Non Strict, Strict
        // Type checking mode (BETA).
        "robloxLsp.typeChecking.mode": "Disabled",
        // Type checking options.
        "robloxLsp.typeChecking.options": {},
        // Always show the full types in type checking errors. (`Array<string>` to `{[number]: string}`)"
        "robloxLsp.typeChecking.showFullType": false
    }
}
